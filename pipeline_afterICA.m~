function [cfg data] = pipeline_afterICA(experiment, participant)
 %% Load data
    add_filedtrip_path();
    cfg = initialize_participant_cfg(experiment, participant);
    
    % Load ICA decomposition
    cfg.component = [1 2];
    load([cfg.datadir cfg.subjectstr 'ICAcomp']);
    
    
    
 %% 8. apply the ica weights to the unprocessed raw data
    data = ft_preprocessing(cfg);
    data = ft_rejectcomponent(cfg, comp, data);
    
 
 %% 9. re-reference the raw data
    % Lange (2015): 0.2-30 Hz bandpass

    cfg.channel     = [1:128, 137];
%     
    cfg.reref       = 'yes';
    cfg.refchannel  = 'all';
%     
    data = ft_preprocessing(cfg, data);
 
 %% 10. get rid of artifacts by back-projection of all but the artifact ICs (I suggest using CORRMAP for the classification process, it is near objective and very robust, we get plenty positive feedback from other labs)


 %% 11. extract events   
    
    [cfg_gram, data_gram]       = epoch_data(cfg, 'gram', data);
    [cfg_lex, data_lex]         = epoch_data(cfg, 'lex', data);

    
 %% Filter
    
    cfg.hpfilter    = 'yes';
    cfg.hpfreq      = 0.2;
    cfg.hpfilttype  = 'fir';
    
    cfg.lpfilter    = 'yes';
    cfg.lpfreq      = 30;
    cfg.lpfilttype  = 'fir';
    
    cfg.bpfilter    = 'yes';
    cfg.bpfreq      = [0.2 30];
    cfg.hpfilter    = 'yes';
    cfg.hpfreq      = 0.2;
    cfg.hpfilttype  = 'fir';
    
    cfg.lpfilter    = 'yes';
    cfg.lpfreq      = 30;
    cfg.lpfilttype  = 'fir';
    
    

   
end